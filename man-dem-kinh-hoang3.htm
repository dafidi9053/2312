<!DOCTYPE html>
<html lang="en">
<script disable-devtool-auto src='https://cdn.jsdelivr.net/npm/disable-devtool'></script>
<head>
    <meta charset="UTF-8" />
	<meta name="robots" content="noindex" />
    <base href="/" />
    <title>Phim Litsoneras</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js"></script>
	<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css">
    <link rel="stylesheet" href="/">
	<script src="https://ssl.p.jwpcdn.com/player/v/8.28.1/jwplayer.js"></script>
    <script src="https://ssl.p.jwpcdn.com/player/v/8.28.1/vast.js"></script>
    <script src="hls.min.js"></script>
    <script src="jwplayer.hlsjs.min.js"></script>
    <script src="tvc.js"></script>
     <style type="text/css">html,body{width:100%;height:100%; padding:0; margin:0;}#player-embed,iframe{width:100%;height:100%;}</style>
    <script type="text/javascript">
        jwplayer.key = "ITWMv7t88JGzI0xPwW8I0+LveiXX9SWbfdmt0ArUSyc=";
		
        
    </script>

          
</head>
<body marginwidth="0" marginheight="0">





    <div id="player-fake"></div>

    <script>
	var wap = navigator.userAgent.match(/iPad|iPhone|Android|Linux|iPod/i) != null;
        var playerInstance = jwplayer('player-fake');
        playerInstance.setup({
            file: 'https://1080.opstream4.com/20231206/49780_421c6aca/index.m3u8',
            width: '100%',
            height: '100%',
            primary: 'html5',
            controls: true,
         tracks: [{"file":"","kind":"captions", label:"US",default:"true"}],
         playbackRateControls: [0.5, 0.75, 1, 1.5, 2],
logo: {
            file: "",
            logoBar: "",
            link: "#",
            position: "top-left"
        },
            skin: {
             name: "netflix"
                     },
        sharing: false,
  displaytitle: true,
  displaydescription: true,
  abouttext: "Powered by xemphim-mienphi",
  aboutlink: "#",
            image: '',
          autostart: false,
            // aspectratio: '16:9',
             
             "intl": {
    "en": {
      "errors": {
        "cantPlayVideo": "An error occurred while loading the video, please try reloading the page or choose another server to watch!"
      }
    }
  }
        });
        playerInstance.on("ready", function () {
  const buttonId = "download-video-button";
  const iconPath =
    "https://i.ibb.co/kgvQvSY/movies-logo.jpg";
  const tooltipText = "Powered by xemphim-mienphi";

  // Call the player's `addButton` API method to add the custom button
  playerInstance.addButton(iconPath, tooltipText, buttonClickAction, buttonId);

  // This function is executed when the button is clicked
  function buttonClickAction() {
    const playlistItem = playerInstance.getPlaylistItem();
    const anchor = document.createElement("a");
    const fileUrl = playlistItem.file;
    anchor.setAttribute("hef", fileUrl);
    const downloadName = playlistItem.file.split("/").pop();
    anchor.setAttribute("download", downloadName);
    anchor.style.display = "none";
    document.body.appendChild(anchor);
    anchor.click();
    document.body.removeChild(anchor);
  }

  // Move the timeslider in-line with other controls
  const playerContainer = playerInstance.getContainer();
  const buttonContainer = playerContainer.querySelector(".jw-button-container");
  const spacer = buttonContainer.querySelector(".jw-spacer");
  const timeSlider = playerContainer.querySelector(".jw-slider-time");
 

  // Detect adblock
  playerInstance.on("adBlock", () => {
    const modal = document.querySelector("div.modal");
    modal.style.display = "flex";

    document
      .getElementById("close")
      .addEventListener("click", () => location.reload());
  });

  // Forward 10 seconds
  const rewindContainer = playerContainer.querySelector(
    ".jw-display-icon-rewind"
  );
  const forwardContainer = rewindContainer.cloneNode(true);
  const forwardDisplayButton = forwardContainer.querySelector(
    ".jw-icon-rewind"
  );
  forwardDisplayButton.style.transform = "scaleX(-1)";
  forwardDisplayButton.ariaLabel = "Forward 10 Seconds";
  const nextContainer = playerContainer.querySelector(".jw-display-icon-next");
  nextContainer.parentNode.insertBefore(forwardContainer, nextContainer);

  // control bar icon
  playerContainer.querySelector(".jw-display-icon-next").style.display = "none"; // hide next button
  const rewindControlBarButton = buttonContainer.querySelector(
    ".jw-icon-rewind"
  );
  const forwardControlBarButton = rewindControlBarButton.cloneNode(true);
  forwardControlBarButton.style.transform = "scaleX(-1)";
  forwardControlBarButton.ariaLabel = "Forward 10 Seconds";
  rewindControlBarButton.parentNode.insertBefore(
    forwardControlBarButton,
    rewindControlBarButton.nextElementSibling
  );

  // add onclick handlers
  [forwardDisplayButton, forwardControlBarButton].forEach((button) => {
    button.onclick = () => {
      playerInstance.seek(playerInstance.getPosition() + 10);
    };
  });
});
    </script>
   
</body>

</html>